{"ast":null,"code":"var _jsxFileName = \"/Users/gunjan/Desktop/DataScience/chop-n-shop-frontend/src/components/Price.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockGroceryLists = [{\n  name: 'Weekly Groceries',\n  items: [{\n    name: 'Milk',\n    quantity: 1\n  }, {\n    name: 'Bread',\n    quantity: 2\n  }, {\n    name: 'Eggs',\n    quantity: 1\n  }]\n}, {\n  name: 'Monthly Essentials',\n  items: [{\n    name: 'Rice',\n    quantity: 5\n  }, {\n    name: 'Pasta',\n    quantity: 2\n  }, {\n    name: 'Tomato Sauce',\n    quantity: 3\n  }]\n}];\nconst mockStores = {\n  Walmart: {\n    Milk: 3.99,\n    Bread: 2.49,\n    Eggs: 4.99,\n    Rice: 6.99,\n    Pasta: 1.29,\n    'Tomato Sauce': 1.99\n  },\n  Target: {\n    Milk: 4.19,\n    Bread: 2.59,\n    Eggs: 4.89,\n    Rice: 6.49,\n    Pasta: 1.19,\n    'Tomato Sauce': 2.09\n  }\n};\nfunction PriceComparison() {\n  _s();\n  const [selectedGroceryList, setSelectedGroceryList] = useState(null);\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [comparisonType, setComparisonType] = useState('list');\n  const handleGroceryListChange = e => {\n    const listName = e.target.value;\n    const groceryList = mockGroceryLists.find(list => list.name === listName);\n    setSelectedGroceryList(groceryList);\n  };\n  const handleProductChange = e => {\n    setSelectedProduct(e.target.value);\n  };\n  const calculateTotalPriceForList = store => {\n    if (!selectedGroceryList) return 0;\n    return selectedGroceryList.items.reduce((total, item) => {\n      const itemPrice = mockStores[store][item.name];\n      return itemPrice ? total + itemPrice * item.quantity : total;\n    }, 0);\n  };\n  const getPricesForListComparison = () => {\n    const storeTotals = Object.keys(mockStores).map(store => ({\n      store,\n      total: calculateTotalPriceForList(store)\n    }));\n    const cheapestStore = storeTotals.reduce((acc, store) => {\n      return store.total < acc.total ? store : acc;\n    }, {\n      store: null,\n      total: Infinity\n    });\n    return {\n      storeTotals,\n      cheapestStore\n    };\n  };\n  const getPricesForProductComparison = () => {\n    const storePrices = Object.keys(mockStores).map(store => ({\n      store,\n      price: mockStores[store][selectedProduct] || null\n    })).filter(store => store.price !== null);\n    const cheapestStore = storePrices.reduce((acc, store) => {\n      return store.price < acc.price ? store : acc;\n    }, {\n      store: null,\n      price: Infinity\n    });\n    return {\n      storePrices,\n      cheapestStore\n    };\n  };\n  const {\n    storeTotals,\n    cheapestStore: cheapestListStore\n  } = comparisonType === 'list' ? getPricesForListComparison() : {};\n  const {\n    storePrices,\n    cheapestStore: cheapestProductStore\n  } = comparisonType === 'product' ? getPricesForProductComparison() : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Price Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-semibold text-gray-700\",\n        children: \"Comparison Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-full mt-2 p-2 border rounded-lg\",\n        value: comparisonType,\n        onChange: e => setComparisonType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"list\",\n          children: \"Compare Grocery List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"product\",\n          children: \"Compare Single Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), comparisonType === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-semibold text-gray-700\",\n        children: \"Choose Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-full mt-2 p-2 border rounded-lg\",\n        onChange: handleGroceryListChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), mockGroceryLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: list.name,\n          children: list.name\n        }, list.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), comparisonType === 'product' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-semibold text-gray-700\",\n        children: \"Choose Product:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-full mt-2 p-2 border rounded-lg\",\n        onChange: handleProductChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), Object.keys(mockStores.Walmart).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: product,\n          children: product\n        }, product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [comparisonType === 'list' && storeTotals && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Price Comparison for Grocery List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), storeTotals.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 border rounded-lg ${store.store === cheapestListStore.store ? 'bg-green-100' : 'bg-white'} mb-2`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-900 font-semibold\",\n            children: store.store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Price: $\", store.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), store.store !== cheapestListStore.store && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: [\"Price Difference: +$\", (store.total - cheapestListStore.total).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this)]\n        }, store.store, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), comparisonType === 'product' && storePrices && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Price Comparison for Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), storePrices.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 border rounded-lg ${store.store === cheapestProductStore.store ? 'bg-green-100' : 'bg-white'} mb-2`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-900 font-semibold\",\n            children: store.store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", store.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), store.store !== cheapestProductStore.store && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: [\"Price Difference: +$\", (store.price - cheapestProductStore.price).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this)]\n        }, store.store, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(PriceComparison, \"tzZqfO0IlI8BIIn3cYq/8CnV+30=\");\n_c = PriceComparison;\nexport default PriceComparison;\nvar _c;\n$RefreshReg$(_c, \"PriceComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","mockGroceryLists","name","items","quantity","mockStores","Walmart","Milk","Bread","Eggs","Rice","Pasta","Target","PriceComparison","_s","selectedGroceryList","setSelectedGroceryList","selectedProduct","setSelectedProduct","comparisonType","setComparisonType","handleGroceryListChange","e","listName","target","value","groceryList","find","list","handleProductChange","calculateTotalPriceForList","store","reduce","total","item","itemPrice","getPricesForListComparison","storeTotals","Object","keys","map","cheapestStore","acc","Infinity","getPricesForProductComparison","storePrices","price","filter","cheapestListStore","cheapestProductStore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","product","toFixed","_c","$RefreshReg$"],"sources":["/Users/gunjan/Desktop/DataScience/chop-n-shop-frontend/src/components/Price.js"],"sourcesContent":["import React, { useState } from 'react';\nconst mockGroceryLists = [\n  {\n    name: 'Weekly Groceries',\n    items: [\n      { name: 'Milk', quantity: 1 },\n      { name: 'Bread', quantity: 2 },\n      { name: 'Eggs', quantity: 1 }\n    ]\n  },\n  {\n    name: 'Monthly Essentials',\n    items: [\n      { name: 'Rice', quantity: 5 },\n      { name: 'Pasta', quantity: 2 },\n      { name: 'Tomato Sauce', quantity: 3 }\n    ]\n  }\n];\nconst mockStores = {\n  Walmart: {\n    Milk: 3.99,\n    Bread: 2.49,\n    Eggs: 4.99,\n    Rice: 6.99,\n    Pasta: 1.29,\n    'Tomato Sauce': 1.99\n  },\n  Target: {\n    Milk: 4.19,\n    Bread: 2.59,\n    Eggs: 4.89,\n    Rice: 6.49,\n    Pasta: 1.19,\n    'Tomato Sauce': 2.09\n  }\n};\nfunction PriceComparison() {\n  const [selectedGroceryList, setSelectedGroceryList] = useState(null);\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [comparisonType, setComparisonType] = useState('list');\n  const handleGroceryListChange = (e) => {\n    const listName = e.target.value;\n    const groceryList = mockGroceryLists.find(list => list.name === listName);\n    setSelectedGroceryList(groceryList);\n  };\n  const handleProductChange = (e) => {\n    setSelectedProduct(e.target.value);\n  };\n  const calculateTotalPriceForList = (store) => {\n    if (!selectedGroceryList) return 0;\n    return selectedGroceryList.items.reduce((total, item) => {\n      const itemPrice = mockStores[store][item.name];\n      return itemPrice ? total + itemPrice * item.quantity : total;\n    }, 0);\n  };\n  const getPricesForListComparison = () => {\n    const storeTotals = Object.keys(mockStores).map(store => ({\n      store,\n      total: calculateTotalPriceForList(store)\n    }));\n    const cheapestStore = storeTotals.reduce((acc, store) => {\n      return store.total < acc.total ? store : acc;\n    }, { store: null, total: Infinity });\n    return { storeTotals, cheapestStore };\n  };\n  const getPricesForProductComparison = () => {\n    const storePrices = Object.keys(mockStores).map(store => ({\n      store,\n      price: mockStores[store][selectedProduct] || null\n    })).filter(store => store.price !== null);\n    const cheapestStore = storePrices.reduce((acc, store) => {\n      return store.price < acc.price ? store : acc;\n    }, { store: null, price: Infinity });\n    return { storePrices, cheapestStore };\n  };\n  const { storeTotals, cheapestStore: cheapestListStore } = comparisonType === 'list' ? getPricesForListComparison() : {};\n  const { storePrices, cheapestStore: cheapestProductStore } = comparisonType === 'product' ? getPricesForProductComparison() : {};\n  return (\n    <div className=\"p-6 max-w-lg mx-auto bg-white rounded-lg shadow-md\">\n      <h1 className=\"text-2xl font-bold mb-4\">Price Comparison</h1>\n      <div className=\"mb-6\">\n        <label className=\"font-semibold text-gray-700\">Comparison Type:</label>\n        <select\n          className=\"w-full mt-2 p-2 border rounded-lg\"\n          value={comparisonType}\n          onChange={(e) => setComparisonType(e.target.value)}\n        >\n          <option value=\"list\">Compare Grocery List</option>\n          <option value=\"product\">Compare Single Product</option>\n        </select>\n      </div>\n      {comparisonType === 'list' && (\n        <div className=\"mb-6\">\n          <label className=\"font-semibold text-gray-700\">Choose Grocery List:</label>\n          <select\n            className=\"w-full mt-2 p-2 border rounded-lg\"\n            onChange={handleGroceryListChange}\n          >\n            <option value=\"\">Select a list</option>\n            {mockGroceryLists.map(list => (\n              <option key={list.name} value={list.name}>{list.name}</option>\n            ))}\n          </select>\n        </div>\n      )}\n      {comparisonType === 'product' && (\n        <div className=\"mb-6\">\n          <label className=\"font-semibold text-gray-700\">Choose Product:</label>\n          <select\n            className=\"w-full mt-2 p-2 border rounded-lg\"\n            onChange={handleProductChange}\n          >\n            <option value=\"\">Select a product</option>\n            {Object.keys(mockStores.Walmart).map(product => (\n              <option key={product} value={product}>{product}</option>\n            ))}\n          </select>\n        </div>\n      )}\n      <div className=\"mt-6\">\n        {comparisonType === 'list' && storeTotals && (\n          <>\n            <h2 className=\"text-lg font-semibold mb-4\">Price Comparison for Grocery List</h2>\n            {storeTotals.map(store => (\n              <div\n                key={store.store}\n                className={`p-4 border rounded-lg ${store.store === cheapestListStore.store ? 'bg-green-100' : 'bg-white'} mb-2`}\n              >\n                <p className=\"text-gray-900 font-semibold\">{store.store}</p>\n                <p>Total Price: ${store.total.toFixed(2)}</p>\n                {store.store !== cheapestListStore.store && (\n                  <p className=\"text-gray-600\">Price Difference: +${(store.total - cheapestListStore.total).toFixed(2)}</p>\n                )}\n              </div>\n            ))}\n          </>\n        )}\n        {comparisonType === 'product' && storePrices && (\n          <>\n            <h2 className=\"text-lg font-semibold mb-4\">Price Comparison for Product</h2>\n            {storePrices.map(store => (\n              <div\n                key={store.store}\n                className={`p-4 border rounded-lg ${store.store === cheapestProductStore.store ? 'bg-green-100' : 'bg-white'} mb-2`}\n              >\n                <p className=\"text-gray-900 font-semibold\">{store.store}</p>\n                <p>Price: ${store.price.toFixed(2)}</p>\n                {store.store !== cheapestProductStore.store && (\n                  <p className=\"text-gray-600\">Price Difference: +${(store.price - cheapestProductStore.price).toFixed(2)}</p>\n                )}\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default PriceComparison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}